name: Deploy

on:
  push:
    branches: [ main ]

jobs:  
  build-and-deploy:
    name: "build and deploy"
    runs-on: ubuntu-latest
    env:
      SSH_USER: ${{ secrets.SSH_USER }}
#       SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      HOST_PATH: ${{ secrets.HOST_PATH }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn'
      - run: echo "finished $TEST_ENV"
      - name: Test SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            whoami
            PATH=$PATH:/${{secrets.SSH_USER}}/.npm-global/bin
            cd ~/../var/www/pm.rem029.com/
            bash deploy.sh
#       - run: yarn install
#       - run: yarn build:frontend
#       - run: yarn build:backend
#       - name: Configure SSH
#         run: |
#           mkdir -p ~/.ssh/
#             echo "$SSH_KEY" > ~/.ssh/staging.key
#             cat ~/.ssh/staging.key
#             chmod 600 ~/.ssh/staging.key
#             cat >>~/.ssh/config <<END
#             Host sb-droplet
#               HostName $SSH_HOST
#               User $SSH_USER
#               IdentityFile ~/.ssh/staging.key
#               StrictHostKeyChecking no
#       - name: Deploy
#         run: ssh sb-droplet 'cd $HOST_PATH && git fetch && git reset --hard origin/master'
